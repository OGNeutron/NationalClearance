/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from "../context"
import * as prisma from "@prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BookingsWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  WeekWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Bookings: prisma.Bookings;
  Days: prisma.Days;
  Friday: prisma.Friday;
  Monday: prisma.Monday;
  Query: {};
  Thursday: prisma.Thursday;
  Tuesday: prisma.Tuesday;
  Wednesday: prisma.Wednesday;
  Week: prisma.Week;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  BookingsWhereUniqueInput: NexusGenInputs['BookingsWhereUniqueInput'];
  WeekWhereUniqueInput: NexusGenInputs['WeekWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  Bookings: { // field return type
    createdAt: any; // DateTime!
    id: number; // Int!
    updatedAt: any; // DateTime!
    weeks: NexusGenRootTypes['Week'][]; // [Week!]!
  }
  Days: { // field return type
    createdAt: any; // DateTime!
    friday: NexusGenRootTypes['Friday']; // Friday!
    id: number; // Int!
    monday: NexusGenRootTypes['Monday']; // Monday!
    thursday: NexusGenRootTypes['Thursday']; // Thursday!
    tuesday: NexusGenRootTypes['Tuesday']; // Tuesday!
    updatedAt: any; // DateTime!
    wednesday: NexusGenRootTypes['Wednesday']; // Wednesday!
  }
  Friday: { // field return type
    createdAt: any; // DateTime!
    eighttoten: boolean; // Boolean!
    fourtosix: boolean; // Boolean!
    id: number; // Int!
    tentotwelve: boolean; // Boolean!
    twelvetotwo: boolean; // Boolean!
    twotofour: boolean; // Boolean!
    updatedAt: any; // DateTime!
  }
  Monday: { // field return type
    createdAt: any; // DateTime!
    eighttoten: boolean; // Boolean!
    fourtosix: boolean; // Boolean!
    id: number; // Int!
    tentotwelve: boolean; // Boolean!
    twelvetotwo: boolean; // Boolean!
    twotofour: boolean; // Boolean!
    updatedAt: any; // DateTime!
  }
  Query: { // field return type
    bookings: NexusGenRootTypes['Bookings'][]; // [Bookings!]!
    fetchWeek: NexusGenRootTypes['Week']; // Week!
  }
  Thursday: { // field return type
    createdAt: any; // DateTime!
    eighttoten: boolean; // Boolean!
    fourtosix: boolean; // Boolean!
    id: number; // Int!
    tentotwelve: boolean; // Boolean!
    twelvetotwo: boolean; // Boolean!
    twotofour: boolean; // Boolean!
    updatedAt: any; // DateTime!
  }
  Tuesday: { // field return type
    createdAt: any; // DateTime!
    eighttoten: boolean; // Boolean!
    fourtosix: boolean; // Boolean!
    id: number; // Int!
    tentotwelve: boolean; // Boolean!
    twelvetotwo: boolean; // Boolean!
    twotofour: boolean; // Boolean!
    updatedAt: any; // DateTime!
  }
  Wednesday: { // field return type
    createdAt: any; // DateTime!
    eighttoten: boolean; // Boolean!
    fourtosix: boolean; // Boolean!
    id: number; // Int!
    tentotwelve: boolean; // Boolean!
    twelvetotwo: boolean; // Boolean!
    twotofour: boolean; // Boolean!
    updatedAt: any; // DateTime!
  }
  Week: { // field return type
    anchor: string; // String!
    createdAt: any; // DateTime!
    days: NexusGenRootTypes['Days']; // Days!
    id: number; // Int!
    updatedAt: any; // DateTime!
  }
}

export interface NexusGenArgTypes {
  Bookings: {
    weeks: { // args
      after?: NexusGenInputs['WeekWhereUniqueInput'] | null; // WeekWhereUniqueInput
      before?: NexusGenInputs['WeekWhereUniqueInput'] | null; // WeekWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Query: {
    bookings: { // args
      after?: NexusGenInputs['BookingsWhereUniqueInput'] | null; // BookingsWhereUniqueInput
      before?: NexusGenInputs['BookingsWhereUniqueInput'] | null; // BookingsWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    fetchWeek: { // args
      date: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Bookings" | "Days" | "Friday" | "Monday" | "Query" | "Thursday" | "Tuesday" | "Wednesday" | "Week";

export type NexusGenInputNames = "BookingsWhereUniqueInput" | "WeekWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}